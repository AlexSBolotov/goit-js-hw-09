{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAGrCG,EAAO,CAAEJ,SAAUA,EAAUC,MAAOA,GAAQ,GAG7CA,EAAM,G,CAIb,SAASO,GAAUR,SAAEA,EAAQC,MAAEA,IAC7BJ,EAAAY,OAAOC,QAAQ,qBAAqBV,QAAeC,M,CAErD,SAASU,GAAUX,SAAEA,EAAQC,MAAEA,IAC7BJ,EAAAY,OAAOG,QAAQ,oBAAoBZ,QAAeC,M,CA9CvCY,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MACEhB,MAAOiB,EACPC,KAAMC,EACNC,OAAQC,GACNN,EAAEO,cAAcC,SACpB,IAAIvB,EAAQwB,OAAOP,EAAQQ,OAC3B,MAAMP,EAAOM,OAAOL,EAAOM,OACrBL,EAASI,OAAOH,EAASI,OAE/B,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChC5B,EAAc4B,EAAG1B,GAAO2B,KAAKpB,GAAWqB,MAAMlB,GAO9CV,GAASkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const {\n    delay: delayEl,\n    step: stepEl,\n    amount: amountEl,\n  } = e.currentTarget.elements;\n  let delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n  // console.dir(delay);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(onSuccess).catch(onFailure);\n    // .then(({ position, delay }) => {\n    //   Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    // })\n    // .catch(({ position, delay }) => {\n    //   Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    // });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n        // Fulfill\n      } else {\n        reject({ position: position, delay: delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onFailure({ position, delay }) {\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onSuccess","Notify","success","$47d4ff9957288465$var$onFailure","failure","document","querySelector","addEventListener","e","preventDefault","delayEl","step","stepEl","amount","amountEl","currentTarget","elements","Number","value","i","then","catch"],"version":3,"file":"03-promises.18c5cbc5.js.map"}